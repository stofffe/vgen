{{ define "package" }}
package {{ . }}

import (
    "fmt"
    "encoding/json")
{{ end }}

{{ define "struct_type" }}
type {{ .Name }}Vgen struct {
    {{- range .Fields }}
        {{ .Name }} *{{ .Type -}}
    {{ end }}
}
{{ end }}

{{ define "struct_validation" }}
func (t {{ .Name }}Vgen) Validate() ({{ .Name }}, error) {
    res := {{ .Name }}{}
    errs := make(map[string]string)

    {{- range .Fields }}
        // {{ .Name }} {{ .Type }}
        if t.{{ .Name }} != nil {
            {{ lowerFirstFunc .Name }} := *t.{{ .Name }}
            {{- range .Rules }}
                {{ RuleFunc . -}}
            {{ end }}
            res.{{ .Name }} = {{ lowerFirstFunc .Name }}
        }  {{ if .Required }} else {
                errs["{{ .Name }}"] = fmt.Sprintf("required")
        } {{- end }}
    {{ end }}

	if len(errs) > 0 {
		j, _ := json.Marshal(errs)
		return {{ .Name }}{}, fmt.Errorf("%s", j)
	}

    return res, nil
}
{{ end }}
